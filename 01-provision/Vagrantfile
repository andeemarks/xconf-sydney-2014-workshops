# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"
BOX = "puppetlabs/centos-6.5-64-puppet"

def common_puppet_config(puppet)
  puppet.hiera_config_path = 'hiera.yaml'
  puppet.working_directory = "/vagrant"
  puppet.module_path = %W(modules module-lib)
  puppet.options = "--verbose --debug"
end

def common_network_config box
  # NOTE: This defaults the bridge to the wireless adapter, but that
  # should be good enough for jazz, right?
  box.vm.network "public_network", bridge: 'en0: Wi-Fi (AirPort)'
end

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  if Vagrant.has_plugin?("vagrant-cachier")
    config.cache.scope = :box
  end

  config.vm.define 'test' do |box|
    box.vm.box = BOX
    box.vm.box_check_update = false

    common_network_config box
    config.vm.hostname = "#{`whoami`.strip}-test"

    box.vm.provision "puppet" do |puppet|
      puppet.manifests_path = "manifests"
      puppet.manifest_file  = "test.pp"
    end
  end

  config.vm.define 'client-app' do |box|
    box.vm.box = "client-app.box"
    box.vm.box_check_update = false

    config.vm.network "forwarded_port", guest: 80, host: 3456

    common_network_config box
    config.vm.hostname = "#{`whoami`.strip}-client-app"

    box.vm.provision "puppet" do |puppet|
      common_puppet_config(puppet)
      puppet.facter = {
        "machine_role" => "client_app",
        "uname" =>  "#{`whoami`.strip}"
      }
    end
  end

  config.vm.define 'web-service' do |box|
    box.vm.box = "web-service.box"
    box.vm.box_check_update = false

    common_network_config box
    config.vm.hostname = "#{`whoami`.strip}-web-service.local"
    config.vm.network "forwarded_port", guest: 8080, host: 8080

    box.vm.provision "puppet" do |puppet|
      common_puppet_config(puppet)
      puppet.facter = {
          "machine_role" => "web_service",
          "uname" =>  "#{`whoami`.strip}"
      }
    end
  end

  config.vm.define 'ci-server' do |box|
    box.vm.box = 'go-ci-server.box'
    box.vm.box_check_update = false

    common_network_config box
    config.vm.hostname = "#{`whoami`.strip}-ci-server"
    config.vm.network "forwarded_port", guest: 8153, host: 8153
    config.vm.network "forwarded_port", guest: 8154, host: 8154

    box.vm.provider "virtualbox" do |v|
      v.memory = 1024
      v.cpus = 2
    end

    box.vm.provision "puppet" do |puppet|
      common_puppet_config(puppet)
      puppet.facter = {
        "machine_role" => "ci_server"
      }
    end
  end

  config.vm.define 'ci-agent' do |box|
    box.vm.box = 'go-ci-agent.box'
    box.vm.box_check_update = false

    common_network_config box
    config.vm.hostname = "#{`whoami`.strip}-ci-agent"

    box.vm.provision "puppet" do |puppet|
      common_puppet_config(puppet)
      puppet.facter = {
          "machine_role" => "ci_agent"
      }
    end
  end

  config.vm.define 'log-stash-server' do |box|
    box.vm.box = "log-stash-server.box"
    box.vm.box_check_update = false

    common_network_config box
    config.vm.hostname = "#{`whoami`.strip}-log-stash-server"

    box.vm.provision "puppet" do |puppet|
      common_puppet_config(puppet)
      puppet.facter = {
          "machine_role" => "log_stash_server"
      }
    end
  end

  config.vm.define 'monitoring' do |box|
    box.vm.box = "monitoring.box"
    box.vm.box_check_update = false

    common_network_config box
    config.vm.hostname = "#{`whoami`.strip}-monitoring"

    box.vm.provision "puppet" do |puppet|
      common_puppet_config(puppet)
      puppet.facter = {
          "machine_role" => "monitoring_server"
      }
    end
  end
end
