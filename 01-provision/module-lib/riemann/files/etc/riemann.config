; vim: filetype=clojure

(logging/init :file "/var/log/riemann/riemann.log")

; everything is available on the public interface
; probably not the best idea for a production system
(tcp-server :host "0.0.0.0")
(udp-server :host "0.0.0.0")
(ws-server :host "0.0.0.0")
(repl-server :host "0.0.0.0")

(periodically-expire 10)

; basic logging for debugging
; print events to stdout and keep the logs clean
(instrumentation {:enabled? false})
;(streams
; prn)

(let [client (tcp-client)
  ; Keep events for 5 minutes by default
  index (default :ttl 300 (update-index (index)))]

  ; Keep riemanns input rate (num events / second)
  (streams
    (with {:metric_f 1 :host nil :state "ok" :service "events/sec"}
      (rate 5 index))

    ; count the number of hosts from whome we are receiving events
    ;(include "riemann-count-hosts.clj")

    ; get percentage cpu utilization for each host
    ; filter cpu services - cpu 0 for now
    ;(include "riemann-cpu-utilization-perc.clj")

    ; Log expired events.
    (expired
      (fn [event] (info "expired" event)))

    index ))


